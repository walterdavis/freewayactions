<item-action name="Image Replacement">
<action-version version="0.3">
Image Replacement
Copyright 2005 - 2010 Walter Lee Davis

Apply the action to a graphic box to convert it into an h tag.

</action-version>
<action-popup name="heading" title="Heading Level">
	<value name="h1" title="H1" default>
	<value name="h2" title="H2">
	<value name="h3" title="H3">
	<value name="h4" title="H4">
	<value name="h5" title="H5">
	<value name="h6" title="H6">
</action-popup>
<action-file var name="screenstyle" keepwithhtml>
<action-javascript>
	String.prototype.strip = function() {
		return this.replace(/^\s+/, '').replace(/\s+$/, '');
	}

	var hasClassName = function(element, className) {
		className = fwQuote(className,'','"'); //"
		var elementClassName = (element["class"]) ? fwQuote(element["class"],'','"') : ''; //"
		return ((elementClassName.length > 0) && (elementClassName == className || new RegExp("\\b" + className + "\\b").test(elementClassName)));
	};

	var addClassName = function(element, className) {
		className = fwQuote(className,'','"'); //"
		if (!hasClassName(element,className)){
			var elementClassName = (element["class"]) ? fwQuote(element["class"],'','"') : ''; //"
			var out = (elementClassName + ' ' + className).strip();
			return element["class"] = fwQuote(out);
		}
	};

	var removeClassName = function(element, className) {
		var className = fwQuote(className,'','"');//"
		var elementClassName = (element['class']) ? fwQuote(element['class'],'','"') : '';//"
		elementClassName = elementClassName.replace(
			new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').replace(/(^\s+|\s+$)/g,'');
		return element['class'] = fwQuote(elementClassName);
	};

	function createStyle(myText,myGif,myName,myHeight,myWidth,myStyle){
		var headTag = fwDocument.fwTags.fwFind("head");
		var cssStyles = headTag.fwAddCSSStyles();
		var out = [];
		myGif = fwQuote(myGif,'','"');//"
		out.push("@media screen { #" + myName + " { ");
		out.push("	margin: 0px; ");
		if(myStyle.length > 0) out.push("	" + myStyle.slice(1,-1) + ";");
		out.push("	padding-top: " + myHeight + "px; ");
		out.push("	width: " + myWidth + "px; ");
		out.push("	background-image: url(" + myGif + "); ");
		out.push("	background-repeat: no-repeat; ");
		out.push("	overflow: hidden; ");
		out.push("	height: " + myHeight + "px; ");
		out.push("	voice-family: \"\\\"}\\\"\"; ");
		out.push("	voice-family: inherit; ");
		out.push("	height: 0; ");
		out.push("}}");
		out.push("");
		cssStyles.fwAddRawln(out.join("\n"));
	}
	function fwAfterEndBody(){
		var myHeading = fwParameters["heading"].fwValue;
		thisIMG = fwDocument.fwTags.fwFind("img", fwItem);
		if (thisIMG){
			var myText = thisIMG.alt;
			var myGif = thisIMG.src;
			var myName = fwItem.toString();
			var myHeight = thisIMG.height;
			var myWidth = thisIMG.width;
			var myStyle = '';
			myText = fwQuote(myText,'','"');//"
			if(!myText || myText == null){
				confirm("Please add ALT text to this item before proceeding");
			}
			enclosingP = thisIMG.fwFindEnclosing(["p","li","dt","dd"]);
			if (enclosingP){
				dummy = enclosingP.fwAddEnclosing("",true);
				dummy.fwMove(thisIMG);
				dummy.fwAddRaw(thisIMG, myText);
				myHeader = dummy.fwAddEnclosing(myHeading,true);
				if(enclosingP['class']) addClassName(myHeader, enclosingP['class'].toString().slice(1,-1));
				myHeader.id = fwQuote(myName);
				myHeader.title = fwQuote(myText);
				myHeader.fwFindEnclosing().fwMove(enclosingP)
				if(enclosingP.toString() != 'p'){
					myHeader.fwAddEnclosing(enclosingP.toString(),true);
				}
				if(thisIMG.style) myStyle = thisIMG.style.toString();
				thisIMG.fwDelete();
				if(enclosingP.fwFindAllContent().length <= 1) {
					enclosingP.fwDelete();
				}else{
					addClassName(enclosingP,'f-fp');
				}
				
			}else{
				var hTag = thisIMG.fwFindEnclosing(myHeading);
				if (hTag){
					hTag.id = fwQuote(myName);
				}
				enclosingTD = thisIMG.fwFindEnclosing("td");
				if (enclosingTD){
					thisIMG.fwAddEnclosing(myHeading,true);
					enclosingTD.fwAddRaw(thisIMG, myText);
					//if(thisIMG.style) myStyle = thisIMG.style.toString();
					thisIMG.fwDelete();
				}else{
					enclosingTD = thisIMG.fwFindEnclosing("div");
					if (enclosingTD){
						enclosingTD.id = fwQuote(fwQuote(enclosingTD.id,'','"') + "_div");//"
						thisIMG.fwAddEnclosing(myHeading,true);
						
						enclosingTD.fwAddRaw(thisIMG, myText);
						//if(thisIMG.style) myStyle = thisIMG.style.toString();
						thisIMG.fwDelete();
					}
				}
			}
			createStyle(myText,myGif,myName,myHeight,myWidth,myStyle);
		}
	}
</action-javascript>
</item-action>
