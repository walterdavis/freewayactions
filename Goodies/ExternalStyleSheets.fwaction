/*Walter's StylesheetsHistory;8.2.03 		Initially created by WLD10.2.03		CSS comments were removed in external file by TP			Added file extension check warning on both actions			Rewrote the link tag creation so that other actions can locate the tag in the tag tree25.2.03		Corrected the checkPageSuffix function to handle external links correctly			The external CSS reference is now only written if available			14.10.04	Added a fwBigPrompt to allow users to add custom code, which will be 			appended to the end of the Freeway-generated style sheet.			To do:			Check that the css file selected isn't the the current page*///common functions for all actions<library-action name="common"><action-javascript>function checkPageSuffix(pageFileName){	var csslRegExp = /\.css$/;	var isCSS = (pageFileName && pageFileName != "" && pageFileName.match(csslRegExp) > -1);	fwParameters["warning"].fwVisible=isCSS;}function stripCSS_Styles(theStyleData) {	//strips the CSS style declaration from the styles and returns just the styles themselves	var FirstComment = (theStyleData.indexOf("--")+3);	var LastComment = theStyleData.lastIndexOf("--");	var rawStyle = theStyleData.substring(FirstComment, LastComment);	return rawStyle;}</action-javascript></library-action><page-action name="ESS-Convert to Style Sheet"><action-version version="2.01">ESS-Convert to Style Sheet(c) 2009 Walter Davis Studio</action-version><action-checkbox name="activate" title="Activate"><action-checkbox name="remove" title="Remove Document Styles" default="no"><action-label name="div2" title="--"><action-button name="Extra Styles" onClick=EditCode();><action-text var name="custom" default=""><action-label name="div" title="-"><action-label name="warning" title="Change this file extension to .css"><action-include name="common"><action-javascript>function fwInterface(){	var activate = fwParameters["activate"].fwBoolValue;	for (var a=1; a < fwParameters.fwLength; a++){		fwParameters[a].fwEnable = activate;	}	checkPageSuffix(fwPage.fwFileName.toString());}function fwBeforeEndHTML(){	var activate = fwParameters["activate"].fwBoolValue;	var styleSheets = fwDocument.fwTags.fwFindAll("style");	if (styleSheets){		var allTags = fwDocument.fwTags.fwFindAllContent();		if (styleSheets && activate){			for (var i in styleSheets){				myStyle = (styleSheets[i].fwToHTML());			}			for (i in allTags) {				allTags[i].fwDelete();			}			var moreStyle = fwParameters.custom.toString();			var dummy = allTags[0].fwAddEnclosing("", false);			var mynewcode = (fwParameters['remove'].fwBoolValue) ? dummy : dummy.fwAddRaw(stripCSS_Styles(myStyle));			mynewcode = mynewcode.fwAddRaw(moreStyle);		}	}}function EditCode(){	var mycustomcode = fwParameters.custom.toString();	var myprompt = "Extra CSS (do not add <style> tags)";	var mycustomcodeprompt = fwBigPrompt(myprompt, mycustomcode);	if (mycustomcodeprompt != null) { //if the cancel button was not hit		if (mycustomcodeprompt != mycustomcode) {//check that the code has changed			fwParameters["custom"].fwValue = mycustomcodeprompt;		}	}}</action-javascript></page-action><page-action name="ESS-Use External Style Sheet"><action-version version="2.01">(c) 2009 Walter Davis StudioUse this Action to attach additional CSS stylesheets to your page. You may use pages within the current document as your stylesheets (apply the ESS-Convert to Style Sheet Action to them first) or hand-coded sheets.</action-version><action-checkbox name="activate" title="Activate"><action-checkbox name="delete" title="Delete Embedded Styles"><action-checkbox name="pages" title="Use Site Pages As Stylesheets" default="yes" /><action-popup name="type_1" title="Media"><value name="all"><value name="screen"><value name="print"></action-popup><action-url name="extstyle_1" advance="no" title="CSS"/><action-file name="file_1" advance="no" title="CSS"/><action-popup name="type_2" title="Media"><value name="all"><value name="screen"><value name="print"></action-popup><action-url name="extstyle_2" advance="no" title="CSS"><action-file name="file_2" advance="no" title="CSS"/><action-popup name="type_3" title="Media"><value name="all"><value name="screen"><value name="print"></action-popup><action-url name="extstyle_3" advance="no" title="CSS"><action-file name="file_3" advance="no" title="CSS"/><action-popup name="type_4" title="Media"><value name="all"><value name="screen"><value name="print"></action-popup><action-url name="extstyle_4" advance="no" title="CSS"><action-file name="file_4" advance="no" title="CSS"/><action-label name="warning" title="Change the file extension to .css"><action-include name="common"><action-javascript>function fwInterface(){	var activate = fwParameters["activate"].fwBoolValue;	for (var a=1; a < fwParameters.fwLength; a++){		fwParameters[a].fwEnable = activate;	}	var usePages = fwParameters['pages'].fwBoolValue;	for (var a=1; a < 5; a++){		if(usePages){			fwParameters['file_' + a].fwVisible = false;			fwParameters['extstyle_' + a].fwVisible = true;		}else{			fwParameters['file_' + a].fwVisible = true;			fwParameters['extstyle_' + a].fwVisible = false;		}	}	fwParameters['warning'].fwVisible = showWarning();}function showWarning(){	if(fwParameters['pages'].fwBoolValue){		for(i = 1; i < 5; i++){			var style = 'extstyle_' + i;			var myextstyle = fwParameters[style].fwValue.fwUrl(fwPage);			if(myextstyle && myextstyle != "" && myextstyle.substr(-3) != 'css') return true;		}	}	return false;}function fwBeforeEndBody(){	var activate = fwParameters["activate"].fwBoolValue;	var usePages = fwParameters['pages'].fwBoolValue;	var styleSheet = fwDocument.fwTags.fwFindAll("style");	if (styleSheet&&activate){		if(fwParameters["delete"].fwBoolValue){			for (var i in styleSheet){				styleSheet[i].fwDelete();			}		}		for(i = 1; i < 5; i++){			if(usePages){				var style = 'extstyle_' + i;				var myextstyle = fwParameters[style].fwValue.fwUrl(fwPage);				var myextstyleAvailable = myextstyle != "";			}else{				var style = 'file_' + i;				var myextstyle = fwParameters[style];				var myextstyleAvailable = myextstyle != "";			}			var media = 'type_' + i;			if (myextstyleAvailable){				var myHead = fwDocument.fwTags.fwFind("head");				if (myHead){					var myLink = myHead.fwAdd("link");					myLink.rel = fwQuote("stylesheet");					myLink.type = fwQuote("text/css");					myLink.media = fwQuote(fwParameters[media]);					myLink.href = fwQuote(myextstyle);					myLink.fwAddRawOpt("");				}			}		}	}}</action-javascript></page-action>