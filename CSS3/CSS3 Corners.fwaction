<item-action name="com.wdstudio.css3corners" title="CSS3 Corners"><action-appliesto html4 html32css xhtml xhtmlstrict /><action-version version="0.4">“CSS3 Corners” ActionWalter Davis Studio 2009, 2011, 2012Apply to an HTML item to round its corners using pure CSS3.</action-version><action-number name="radius" title="Corner Radius (px)"><action-disclosure name="separate" title="Separate Radiuses" default="no"><action-number name="top_left" title="Top Left" /><action-number name="top_right" title="      Top Right" advance="no" /><action-number name="bottom_left" title="Bottom Left" /><action-number name="bottom_right" title=" Bottom Right" advance="no" /><action-javascript>	if(! "foo".strip ){		String.prototype.strip = function() {			return this.replace(/^\s+/, '').replace(/\s+$/, '');		}	}	function array_search(array, element){		for(var i = 0; i < array.length; i++){			if(array[i] == element) return true;		}		return false;	}	var hasClassName = function(element, className) {		className = fwQuote(className,'','"'); //"		var elementClassName = (element["class"]) ? fwQuote(element["class"],'','"') : ''; //"		return ((elementClassName.length > 0) && (elementClassName == className || new RegExp("\\b" + className + "\\b").test(elementClassName)));	};	var addClassName = function(element, className) {		className = fwQuote(className,'','"'); //"		if (!hasClassName(element,className)){			var elementClassName = (element["class"]) ? fwQuote(element["class"],'','"') : ''; //"			var out = (elementClassName + ' ' + className).strip();			return element["class"] = fwQuote(out);		}	};	var removeClassName = function(element, className) {		var className = fwQuote(className,'','"');//"		var elementClassName = (element['class']) ? fwQuote(element['class'],'','"') : '';//"		elementClassName = elementClassName.replace(			new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();		return element['class'] = (elementClassName.length > 0) ? fwQuote(elementClassName) : null;	};		if(!fwPage.corners) fwPage['corners'] = [];		function fwInterface(){		if(fwParameters['separate'].fwBoolValue){			fwParameters['top_left'].fwVisible = fwParameters['top_right'].fwVisible = fwParameters['bottom_left'].fwVisible = fwParameters['bottom_right'].fwVisible = true;			fwParameters['radius'].fwEnable = false;		}else{			fwParameters['radius'].fwEnable = true;			fwParameters['top_left'].fwVisible = fwParameters['top_right'].fwVisible = fwParameters['bottom_left'].fwVisible = fwParameters['bottom_right'].fwVisible = false;		}	}	function fwParameterChanged(newParameter,oldParameter){		fwInterface(newParameter);	}	function fwBeforeEndBody(){		var radius = parseInt(fwParameters["radius"].fwValue,10);		var selector = 'r_' + radius.toString();		var separate = fwParameters['separate'].fwBoolValue;		var extended = '';		if (separate){			var top_left = parseInt(fwParameters['top_left'].fwValue,10);			var top_right = parseInt(fwParameters['top_right'].fwValue,10);			var bottom_left = parseInt(fwParameters['bottom_left'].fwValue,10);			var bottom_right = parseInt(fwParameters['bottom_right'].fwValue,10);			if (top_left > 0 || top_right > 0 || bottom_left > 0 || bottom_right > 0){				selector = 'r_' + [top_left.toString(), top_right.toString(), bottom_left.toString(), bottom_right.toString()].join('-');				extended = " { ";				extended += (top_left > 0) ? "-webkit-border-top-left-radius:" + top_left.toString() + "px; -moz-border-radius-topleft:" + top_left.toString() + "px; border-top-left-radius:" + top_left.toString() + "px; " : "";				extended += (top_right > 0) ? "-webkit-border-top-right-radius:" + top_right.toString() + "px; -moz-border-radius-topright:" + top_right.toString() + "px; border-top-right-radius:" + top_right.toString() + "px; " : "";				extended += (bottom_left > 0) ? "-webkit-border-bottom-left-radius:" + bottom_left.toString() + "px; -moz-border-radius-bottomleft:" + bottom_left.toString() + "px; border-bottom-left-radius:" + bottom_left.toString() + "px; " : "";				extended += (bottom_right > 0) ? "-webkit-border-bottom-right-radius:" + bottom_right.toString() + "px; -moz-border-radius-bottomright:" + bottom_right.toString() + "px; border-bottom-right-radius:" + bottom_right.toString() + "px; " : "";				extended += " -webkit-background-clip:padding-box; background-clip:padding-box;";				extended += " } ";			}		}		if(radius && radius > 0 || extended.length > 0){			if(array_search(fwPage.corners, selector) == false){				fwPage.corners.push(selector);				var myhead = fwDocument.fwTags.fwFind("head");				if (myhead){					var cssStyles = myhead.fwAddCSSStyles();					if(extended.length < 1){						cssStyles.fwAddRawln("." + selector + " { -webkit-border-radius: " + radius.toString() + "px; -moz-border-radius: " + radius.toString() + "px;  border-radius: " + radius.toString() + "px; -webkit-background-clip:padding-box; background-clip:padding-box; }");					}else{						cssStyles.fwAddRawln("." + selector + extended);					}				}			}			var myTags = Array("img", "div","td");			var myItem = fwDocument.fwTags.fwFindAll(myTags,fwItem);			for (var i = 0; i < myItem.length; i++){				if (myItem[i] && myItem[i] != null){					addClassName(myItem[i], selector);				}			}		}	}</action-javascript></item-action>