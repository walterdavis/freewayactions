<action name="com.wdstudio.css3textshadow" title="CSS3 Text Shadow" height=12>
<action-version version="0.1">
“CSS3 Text Shadow” Action
Walter Davis Studio 2010

Apply inline within HTML text to give the text a drop shadow using pure CSS3.
</action-version>
<action-text name="xOffset" title="X-axis Offset (px)" />
<action-text name="yOffset" title="Y-axis Offset (px)" />
<action-text name="blur" title="Shadow blur (px)" />
<action-color name="shadowColor" title="Shadow Color" />
<action-javascript>
	function SetCSSAttribute(tag, attributeName, attributeValue) { 
		// Sets a "CSS" attribute such as "position:absolute" in a tag value 
		// Passing an attribute value of null removes that attribute entirely
		if (tag==null) return; 
		var tagField = tag['style']; 
		if (tagField == null){
			tag['style'] = '"'+attributeName+':'+attributeValue+'"'; 
		}else{
			var tagField = tagField.toString();
			var pairs = tagField.slice(1,-1).split(';');
			var out = new Array();
			if(attributeValue != null && tagField.indexOf(attributeName) < 0) out.push(attributeName+':'+attributeValue);
			for(i in pairs){
				pairs[i] = pairs[i].replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1"); //javascript equivalent of trim
				if(pairs[i].slice(0,pairs[i].indexOf(':')) == attributeName) {
					if(attributeValue != null) out.push(attributeName+':'+attributeValue);
				}else{
					out.push(pairs[i]);
				}
			}
			tag['style']= fwQuote(out.join('; ')); 
		}
	} 
	function GetCSSAttribute(tag, attributeName) { 
		// Gets a "CSS" attribute such as "position:absolute" from a tag value 
		// returns NULL if the attribute can not be found 
		if (tag==null) return null; 
		var tagField = tag['style']; 
		if (tagField == null) {
			return null; 
		}else { 
			var tagField = tagField.toString(); 
			var pairs = tagField.slice(1,-1).split(';');
			for(i in pairs){
				pairs[i] = pairs[i].replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1"); //javascript equivalent of trim
				if(pairs[i].slice(0,pairs[i].indexOf(':')) == attributeName) {
					return pairs[i].slice(pairs[i].indexOf(':')+1,pairs[i].length);
				}
			}
			return null; 
		} 
	}

	function fwAfterEndHTML(){
		var blur = parseInt(fwParameters["blur"].fwValue,10);
		var xOffset = fwParameters["xOffset"].fwValue;
		var yOffset = fwParameters["yOffset"].fwValue;
		xOffset = (xOffset < 0 || xOffset > 0) ? parseInt(xOffset,10) : 0;
		yOffset = (yOffset < 0 || yOffset > 0) ? parseInt(yOffset,10) : 0;
		var myhead = fwDocument.fwTags.fwFind("head");
		var shadowColor = fwParameters['shadowColor'].fwValue.fwHex;
		if(shadowColor != undefined){
			shadowColor = '#' + shadowColor;
			var style = xOffset + 'px ' + yOffset + 'px ' + blur + 'px ' + shadowColor;
			var blockTags = ['blockquote','p','li','dd','dt','h1','h2','h3','h4','h5','h6'];
			var thisItem = fwDocument.fwTags.fwFind(fwItem);
			if(thisItem && thisItem.fwFindEnclosing(blockTags)){
				var thisPara = thisItem.fwFindEnclosing(blockTags);
				if (thisPara){
					SetCSSAttribute(thisPara,'text-shadow',style);
				}else{
					alert('A surrounding tag could not be detected. Your text shadow was not added to the item.');
				}
			}
		}
	}

</action-javascript>

</action>
<item-action name="com.wdstudio.css3textshadow" title="CSS3 Text Shadow">
<action-appliesto html4 html32css xhtml xhtmlstrict />
<action-version version="0.1">
“CSS3 Text Shadow” Action
Walter Davis Studio 2010

Apply to an HTML item to give its HTML text a drop shadow using pure CSS3.
</action-version>
<action-text name="xOffset" title="X-axis Offset (px)" />
<action-text name="yOffset" title="Y-axis Offset (px)" />
<action-text name="blur" title="Shadow blur (px)" />
<action-color name="shadowColor" title="Shadow Color" />
<action-javascript>
	function fwAfterEndHTML(){
		var blur = parseInt(fwParameters["blur"].fwValue,10);
		var xOffset = fwParameters["xOffset"].fwValue;
		var yOffset = fwParameters["yOffset"].fwValue;
		xOffset = (xOffset < 0 || xOffset > 0) ? parseInt(xOffset,10) : 0;
		yOffset = (yOffset < 0 || yOffset > 0) ? parseInt(yOffset,10) : 0;
		var myhead = fwDocument.fwTags.fwFind("head");
		var shadowColor = fwParameters['shadowColor'].fwValue.fwHex;
		if(shadowColor != undefined){
			shadowColor = '#' + shadowColor;
			var myTags = Array("div","td");
			var myItem = fwDocument.fwTags.fwFindAll(myTags,fwItem);
			for (var i in myItem){
				if (myItem[i] && myItem[i] != null){
					if(!myItem[i].ID){ 
						myItem[i].ID = fwQuote(fwItem);
					}
					var myID = myItem[i].ID;
					myID = fwQuote(myID,'','"');//"
					if (myhead){
						var cssStyles = myhead.fwAddCSSStyles();
						var style = xOffset + 'px ' + yOffset + 'px ' + blur + 'px ' + shadowColor;
						cssStyles.fwAddRawln("#" + myID + " { text-shadow: " + style + " }");
					}
				}
			}
		}
	}

</action-javascript>

</item-action>
